<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fzk.exercise.manage.dao.OrderItemMapper" >
  <resultMap id="BaseResultMap" type="com.fzk.exercise.manage.model.OrderItem" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="order_no" property="orderNo" jdbcType="BIGINT" />
    <result column="project_id" property="projectId" jdbcType="INTEGER" />
    <result column="project_name" property="projectName" jdbcType="VARCHAR" />
    <result column="course_id" property="courseId" jdbcType="INTEGER" />
    <result column="current_unit_price" property="currentUnitPrice" jdbcType="DECIMAL" />
    <result column="total_price" property="totalPrice" jdbcType="DECIMAL" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, order_no, project_id, project_name, course_id, current_unit_price, total_price,
    create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from exercise_order_item
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from exercise_order_item
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fzk.exercise.manage.model.OrderItem" >
    insert into exercise_order_item (id, user_id, order_no, 
      project_id, project_name, course_id,
      current_unit_price, total_price, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{orderNo,jdbcType=BIGINT}, 
      #{projectId,jdbcType=INTEGER}, #{projectName,jdbcType=VARCHAR}, #{courseId,jdbcType=INTEGER},
      #{currentUnitPrice,jdbcType=DECIMAL}, #{totalPrice,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP},
            now())
  </insert>
  <insert id="insertSelective" parameterType="com.fzk.exercise.manage.model.OrderItem" >
    insert into exercise_order_item
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="orderNo != null" >
        order_no,
      </if>
      <if test="projectId != null" >
        project_id,
      </if>
      <if test="projectName != null" >
        project_name,
      </if>
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="currentUnitPrice != null" >
        current_unit_price,
      </if>
      <if test="totalPrice != null" >
        total_price,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=BIGINT},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="projectName != null" >
        #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="currentUnitPrice != null" >
        #{currentUnitPrice,jdbcType=DECIMAL},
      </if>
      <if test="totalPrice != null" >
        #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        now(),
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fzk.exercise.manage.model.OrderItem" >
    update exercise_order_item
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null" >
        order_no = #{orderNo,jdbcType=BIGINT},
      </if>
      <if test="projectId != null" >
        project_id = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="projectName != null" >
        project_name = #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null" >
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="currentUnitPrice != null" >
        current_unit_price = #{currentUnitPrice,jdbcType=DECIMAL},
      </if>
      <if test="totalPrice != null" >
        total_price = #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = now(),
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fzk.exercise.manage.model.OrderItem" >
    update exercise_order_item
    set user_id = #{userId,jdbcType=INTEGER},
      order_no = #{orderNo,jdbcType=BIGINT},
      project_id = #{projectId,jdbcType=INTEGER},
      project_name = #{projectName,jdbcType=VARCHAR},
      course_id = #{courseId,jdbcType=INTEGER},
      current_unit_price = #{currentUnitPrice,jdbcType=DECIMAL},
      total_price = #{totalPrice,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = now()
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectOrderByUserIdCourseId" resultMap="BaseResultMap">
    SELECT
      <include refid="Base_Column_List"/>
    FROM exercise_order_item
    WHERE user_id = #{userId,jdbcType=INTEGER} and course_id = #{courseId,jdbcType=INTEGER}
  </select>

  <insert id="batchInsert">
    insert into exercise_order_item (user_id,
    order_no, project_id, project_name,course_id,
    current_unit_price, total_price,
    create_time, update_time)
    values
    <foreach collection="orderItemList" index="index" item="item" separator=",">
      (
      #{item.userId},#{item.orderNo},#{item.projectId},#{item.projectName},#{item.courseId},#{item.currentUnitPrice},#{item.totalPrice},now(), now()
      )
    </foreach>
  </insert>

  <delete id="deleteByUserIdOrderItemIds" parameterType="map">
    delete from exercise_order_item
    where user_id = #{userId}
    <if test="orderItemIdsList != null">
      and id in
      <foreach collection="orderItemIdsList" item="item" index="index" open="(" separator="," close=")">
        #{item}
      </foreach>
    </if>
  </delete>

  <select id="selectOrderItemListByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    From exercise_order_item
    where user_id = #{userId}
  </select>

  <select id="getByOrderNoUserId" parameterType="map" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM exercise_order_item
    where order_no = #{orderNo}
    and user_id = #{userId}
  </select>

  <select id="getByOrderNo" parameterType="map" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM exercise_order_item
    where order_no = #{orderNo}
  </select>

  <select id="sumByProjectId" resultType="int">
    SELECT IFNULL(count(project_id),0) FROM exercise_order_item
      WHERE project_id = #{projectId}
  </select>

  <select id="sumByCourseId" resultType="int">
    SELECT IFNULL(count(course_id),0) FROM exercise_order_item
    WHERE course_id = #{courseId}
  </select>

</mapper>